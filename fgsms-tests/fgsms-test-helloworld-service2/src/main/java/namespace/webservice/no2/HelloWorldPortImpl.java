/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * If it is not possible or desirable to put the notice in a particular
 * file, then You may include the notice in a location (such as a LICENSE
 * file in a relevant directory) where a recipient would be likely to look
 * for such a notice.

 * 
 */
 
/*  ---------------------------------------------------------------------------
 *  U.S. Government, Department of the Army
 *  Army Materiel Command
 *  Research Development Engineering Command
 *  Communications Electronics Research Development and Engineering Center
 *  ---------------------------------------------------------------------------
 */package namespace.webservice.no2;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Iterator;
import java.util.Map;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.Resource;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.WebServiceContext;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.0
 *
 */
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.WRAPPED, use = SOAPBinding.Use.LITERAL)
@WebService(name = "HelloWorldPort", targetNamespace = "http://new.webservice.namespace")

public class HelloWorldPortImpl {

    /**
     *
     * @param parameters
     * @return
     *     returns namespace.webservice._new.HelloWorldResponse
     */
       @Resource
        private WebServiceContext ctx;
    @WebMethod(operationName = "SayHelloWorld", action = "urn:#SayHelloWorld")
    @WebResult(name = "HelloWorldResponse", targetNamespace = "http://new.webservice.namespace", partName = "parameters")
    public HelloWorldResponse sayHelloWorld(
            @WebParam(name = "HelloWorld", targetNamespace = "http://new.webservice.namespace", partName = "parameters") HelloWorld parameters) throws MalformedURLException {
        namespace.webservice.client.ObjectFactory f = new namespace.webservice.client.ObjectFactory();
        /*HelloWorldResponseMsg ret = new HelloWorldResponseMsg();
        ret.setData("Hello World " + parameters.getReq().getValue().getSayhellodata() + " from service No2");

        HelloWorldResponse r = new HelloWorldResponse();
        r.setHelloWorldResult(f.createHelloWorldResponseHelloWorldResult(ret));
         */
        /*
ctx.getMessageContext().put("fgsmstest", UUID.randomUUID().toString());
       /]   Iterator it = ctx.getMessageContext().keySet().iterator();
        while (it.hasNext())

        {
            Logger.getAnonymousLogger().log(Level.INFO, "Helloworld2 " +  it.toString() + " " + it.next().toString());
        }*/
/*
        namespace.webservice.client.HelloWorldPortImplService s = new namespace.webservice.client.HelloWorldPortImplService();
    
        //HelloWorldService s =new HelloWorldService(new URL("http://localhost:8080/HelloWorldServiceNo1/HelloWorldPortImpl?wsdl"));
        namespace.webservice.client.HelloWorldPort p = s.getHelloWorldPortPort();
            BindingProvider bpPCS = (BindingProvider) p;
        Map<String, Object> contextPCS = bpPCS.getRequestContext();
        contextPCS.put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "http://localhost:8080/HelloWorldServiceNo1/HelloWorldPort");
        
        namespace.webservice.client.HelloWorldData req = new namespace.webservice.client.HelloWorldData();
        req.setSayhellodata("(Hello World from Service No2" + parameters.getReq().getValue().getSayhellodata() + ")");
        namespace.webservice.client.HelloWorld reqq = f.createHelloWorld();
        reqq.setReq(req);
        namespace.webservice.client.HelloWorldResponse r = p.sayHelloWorld(reqq);
     */
        ObjectFactory f2 = new ObjectFactory();
        HelloWorldResponseMsg ret = new HelloWorldResponseMsg();
        ret.setData("Hello World " + 
             //  r.getHelloWorldResult().getData() +
                " from service No1");

        HelloWorldResponse r2 = new HelloWorldResponse();
        r2.setHelloWorldResult(f2.createHelloWorldResponseHelloWorldResult(ret));

        return r2;

    }
}
