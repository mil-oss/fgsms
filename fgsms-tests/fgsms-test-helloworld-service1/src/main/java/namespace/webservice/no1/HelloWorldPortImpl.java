/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * If it is not possible or desirable to put the notice in a particular
 * file, then You may include the notice in a location (such as a LICENSE
 * file in a relevant directory) where a recipient would be likely to look
 * for such a notice.

 * 
 */
 
/*  ---------------------------------------------------------------------------
 *  U.S. Government, Department of the Army
 *  Army Materiel Command
 *  Research Development Engineering Command
 *  Communications Electronics Research Development and Engineering Center
 *  ---------------------------------------------------------------------------
 */package namespace.webservice.no1;

import java.net.URL;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.Resource;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.WebServiceContext;
import org.tempuri.IService1;
import org.tempuri.Service1;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.0
 * 
 */
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.WRAPPED, use = SOAPBinding.Use.LITERAL)
@WebService(name = "HelloWorldPort", targetNamespace = "http://new.webservice.namespace")

public class HelloWorldPortImpl {

    /**
     * 
     * @param parameters
     * @return
     *     returns namespace.webservice._new.HelloWorldResponse
     */
    @Resource
    private WebServiceContext ctx;

    @WebMethod(operationName = "SayHelloWorld", action = "urn:#SayHelloWorld")
    @WebResult(name = "HelloWorldResponse", targetNamespace = "http://new.webservice.namespace", partName = "parameters")
    public HelloWorldResponse sayHelloWorld(
            @WebParam(name = "HelloWorld", targetNamespace = "http://new.webservice.namespace", partName = "parameters") HelloWorld parameters) {
        /*
        Iterator it = ctx.getMessageContext().keySet().iterator();
        while (it.hasNext())

        {
        Logger.getAnonymousLogger().log(Level.INFO, "Helloworld1 " +  it.toString() + " " + it.next().toString());
        }*/
        String data = "";
/*        try {
            org.tempuri.Service1 s = new Service1(new URL("http://localhost:50206/Service1.svc"));
            IService1 port = s.getBasicHttpBindingIService1();
             BindingProvider bpPCS = (BindingProvider) port;
                    Map<String, Object> contextPCS = bpPCS.getRequestContext();
                    //Object oldAddress = context.get(BindingProvider.ENDPOINT_ADDRESS_PROPERTY);
              //contextPCS.put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "http://localhost:50206/Service1.svc");

            data = port.getData(new Integer(30));
        } catch (Exception ex) {
            data = ex.getLocalizedMessage();
        }*/
        ObjectFactory f = new ObjectFactory();
        HelloWorldResponseMsg ret = new HelloWorldResponseMsg();
        ret.setData("Hello World " + parameters.getReq().getValue().getSayhellodata() + " from service No1 ");

        HelloWorldResponse r = new HelloWorldResponse();
        r.setHelloWorldResult(f.createHelloWorldResponseHelloWorldResult(ret));


        return r;

    }
}
