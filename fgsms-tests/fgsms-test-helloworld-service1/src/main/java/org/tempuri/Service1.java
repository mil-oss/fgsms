/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * If it is not possible or desirable to put the notice in a particular
 * file, then You may include the notice in a location (such as a LICENSE
 * file in a relevant directory) where a recipient would be likely to look
 * for such a notice.

 * 
 */
 
/*  ---------------------------------------------------------------------------
 *  U.S. Government, Department of the Army
 *  Army Materiel Command
 *  Research Development Engineering Command
 *  Communications Electronics Research Development and Engineering Center
 *  ---------------------------------------------------------------------------
 */
package org.tempuri;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.0
 * 
 */
@WebServiceClient(name = "Service1", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://localhost:50206/Service1.svc?wsdl")
public class Service1
    extends Service
{

    private final static URL SERVICE1_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(org.tempuri.Service1 .class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = org.tempuri.Service1 .class.getResource(".");
            url = new URL(baseUrl, "http://localhost:50206/Service1.svc?wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://localhost:50206/Service1.svc?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        SERVICE1_WSDL_LOCATION = url;
    }

    public Service1(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Service1() {
        super(SERVICE1_WSDL_LOCATION, new QName("http://tempuri.org/", "Service1"));
    }
        public Service1(URL wsdl) {
        super(wsdl, new QName("http://tempuri.org/", "Service1"));
    }

    /**
     * 
     * @return
     *     returns IService1
     */
    @WebEndpoint(name = "BasicHttpBinding_IService1")
    public IService1 getBasicHttpBindingIService1() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IService1"), IService1.class);
    }

}
