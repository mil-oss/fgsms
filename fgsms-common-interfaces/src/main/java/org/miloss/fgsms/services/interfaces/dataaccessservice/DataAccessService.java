
package org.miloss.fgsms.services.interfaces.dataaccessservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.miloss.fgsms.services.interfaces.common.SecurityWrapper;
import org.miloss.fgsms.services.interfaces.common.TimeRange;


/**
 * DataAccessService WSDL Interface
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.0
 * 
 */
@WebService(name = "dataAccessService", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
public interface DataAccessService {


    /**
     * 
     *             Get Average Performance Statistics For a Service
     *         
     *            
     *             
     * 
     * @param request
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetPerformanceAverageStatsResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetPerformanceAverageStats", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetPerformanceAverageStats")
    @WebResult(name = "GetPerformanceAverageStatsResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetPerformanceAverageStats", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetPerformanceAverageStats")
    @ResponseWrapper(localName = "GetPerformanceAverageStatsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetPerformanceAverageStatsResponse")
    public GetPerformanceAverageStatsResponseMsg getPerformanceAverageStats(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetPerformanceAverageStatsRequestMsg request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Get Average Performance Statistics For All Services - this will return performance stats for all services that the requestor has access to
     *         
     *            
     *             
     * 
     * @param range
     * @param classification
     * @return
     *     returns java.util.List<org.miloss.fgsms.services.interfaces.dataaccessservice.GetPerformanceAverageStatsResponseMsg>
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetPerformanceAverageStatsAll", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetPerformanceAverageStatsAll")
    @WebResult(name = "AllStats", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetPerformanceAverageStatsAll", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetPerformanceAverageStatsAll")
    @ResponseWrapper(localName = "GetPerformanceAverageStatsAllResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetPerformanceAverageStatsAllResponse")
    public List<GetPerformanceAverageStatsResponseMsg> getPerformanceAverageStatsAll(
        @WebParam(name = "classification", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        SecurityWrapper classification,
        @WebParam(name = "range", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        TimeRange range)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Get Average Performance Statistics a Hosting Server
     *             I.E. a machine hosting a web service that is monitored by fgsms
     *             Requires Global Admin permissions
     *         
     *            
     *             
     * 
     * @param request
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetPerformanceAverageStatsResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetPerformanceAverageHostingStats", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetPerformanceAverageHostingStats")
    @WebResult(name = "GetPerformanceAverageHostingStatsResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetPerformanceAverageHostingStats", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetPerformanceAverageHostingStats")
    @ResponseWrapper(localName = "GetPerformanceAverageHostingStatsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetPerformanceAverageHostingStatsResponse")
    public GetPerformanceAverageStatsResponseMsg getPerformanceAverageHostingStats(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetPerformanceAverageHostStatsRequestMsg request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns all available message logs for a given period of time
     *         
     *            
     *             
     * 
     * @param request
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetMessageLogsResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetMessageLogsByRange", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetMessageLogsByRange")
    @WebResult(name = "GetMessageLogsResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetMessageLogsByRange", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMessageLogsByRange")
    @ResponseWrapper(localName = "GetMessageLogsByRangeResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMessageLogsByRangeResponse")
    public GetMessageLogsResponseMsg getMessageLogsByRange(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetMessageLogsRequestMsg request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns all available message logs sorted by timestamp descending, i.e. the most recent first. options are offset (for paging) and record count 
     *         
     *            
     *             
     * 
     * @param request
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetMessageLogsResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetRecentMessageLogs", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetRecentMessageLogs")
    @WebResult(name = "GetMessageLogsResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetRecentMessageLogs", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetRecentMessageLogs")
    @ResponseWrapper(localName = "GetRecentMessageLogsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetRecentMessageLogsResponse")
    public GetMessageLogsResponseMsg getRecentMessageLogs(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetRecentMessageLogsRequestMsg request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Return a specific message log for a given web service transaction
     *         
     *            
     *             
     * 
     * @param request
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetMessageTransactionLogResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetMessageTransactionLog", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetMessageTransactionLog")
    @WebResult(name = "GetMessageTransactionLogResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetMessageTransactionLog", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMessageTransactionLog")
    @ResponseWrapper(localName = "GetMessageTransactionLogResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMessageTransactionLogResponse")
    public GetMessageTransactionLogResponseMsg getMessageTransactionLog(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetMessageTransactionLogRequestMsg request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns a specific message transaction log 
     *         
     *            
     *             
     * 
     * @param req
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetMessageTransactionLogDetailsResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetMessageTransactionLogDetails", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetMessageTransactionLogDetails")
    @WebResult(name = "req", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetMessageTransactionLogDetails", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMessageTransactionLogDetails")
    @ResponseWrapper(localName = "GetMessageTransactionLogDetailsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMessageTransactionLogDetailsResponse")
    public GetMessageTransactionLogDetailsResponseMsg getMessageTransactionLogDetails(
        @WebParam(name = "req", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetMessageTransactionLogDetailsMsg req)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns all available operational status change logs for a given period of time and service 
     *         
     *            
     *             
     * 
     * @param request
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetOperationalStatusLogResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetOperationalStatusLog", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetOperationalStatusLog")
    @WebResult(name = "GetOperationalStatusLogResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetOperationalStatusLog", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetOperationalStatusLog")
    @ResponseWrapper(localName = "GetOperationalStatusLogResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetOperationalStatusLogResponse")
    public GetOperationalStatusLogResponseMsg getOperationalStatusLog(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetOperationalStatusLogRequestMsg request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns all available SLA fault records, transactional and nontransactional logs for a given period of time and service 
     *         
     *            
     *             
     * 
     * @param request
     * @return
     *     returns java.util.List<org.miloss.fgsms.services.interfaces.dataaccessservice.GetSLAFaultRecordsResponseMsg>
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetSLAFaultRecords", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetSLAFaultRecords")
    @WebResult(name = "GetSLAFaultRecordsResponseMsgResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetSLAFaultRecords", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetSLAFaultRecords")
    @ResponseWrapper(localName = "GetSLAFaultRecordsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetSLAFaultRecordsResponse")
    public List<GetSLAFaultRecordsResponseMsg> getSLAFaultRecords(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetSLAFaultRecordsRequestMsg request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns all available operational status change logs for a given period of time for all services 
     *         
     *            
     *             
     * 
     * @param request
     * @return
     *     returns java.util.List<org.miloss.fgsms.services.interfaces.dataaccessservice.GetAllOperationalStatusLogResponseMsg>
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetAllOperationalStatusLog", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetAllOperationalStatusLog")
    @WebResult(name = "GetAllOperationalStatusLogResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetAllOperationalStatusLog", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAllOperationalStatusLog")
    @ResponseWrapper(localName = "GetAllOperationalStatusLogResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAllOperationalStatusLogResponse")
    public List<GetAllOperationalStatusLogResponseMsg> getAllOperationalStatusLog(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetAllOperationalStatusLogRequestMsg request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             GetMonitoredServiceList
     *             Returns 0 or more monitored services. 
     *             This list of services is generated from the defined policies 
     *             The list of soap actions is generated from the actually message transactions
     *             meaning that if a particular action has never been executed, fgsms doesn't know about it.
     *             Returns a listing of services along with there associated soap actions
     *         
     *            
     *             
     * 
     * @param request
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetMonitoredServiceListResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetMonitoredServiceList", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetMonitoredServiceList")
    @WebResult(name = "GetMonitoredServiceListResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetMonitoredServiceList", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMonitoredServiceList")
    @ResponseWrapper(localName = "GetMonitoredServiceListResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMonitoredServiceListResponse")
    public GetMonitoredServiceListResponseMsg getMonitoredServiceList(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetMonitoredServiceListRequestMsg request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             GetServiceHostList
     *             Returns 0 or more host names of machines hosting monitored web services.
     *         
     *            
     *             
     * 
     * @param request
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetServiceHostListResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetServiceHostList", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetServiceHostList")
    @WebResult(name = "GetServiceHostListResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetServiceHostList", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetServiceHostList")
    @ResponseWrapper(localName = "GetServiceHostListResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetServiceHostListResponse")
    public GetServiceHostListResponseMsg getServiceHostList(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetServiceHostListRequestMsg request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             GetDataCollectorList
     *             Returns 0 or more host names of machines hosting data collector services
     *         
     *            
     *             
     * 
     * @param request
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetDataCollectorListResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetDataCollectorList", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetDataCollectorList")
    @WebResult(name = "GetDataCollectorListResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetDataCollectorList", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetDataCollectorList")
    @ResponseWrapper(localName = "GetDataCollectorListResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetDataCollectorListResponse")
    public GetDataCollectorListResponseMsg getDataCollectorList(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetDataCollectorListRequestMsg request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Removes performance data for the specified service(s) and optionally for the specified time range.
     *             If access is denied for any item, no changes will be made and a fault will be returned.
     *         
     *            
     *             
     * 
     * @param request
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.PurgePerformanceDataResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "PurgePerformanceData", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/PurgePerformanceData")
    @WebResult(name = "PurgePerformanceDataResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "PurgePerformanceData", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.PurgePerformanceData")
    @ResponseWrapper(localName = "PurgePerformanceDataResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.PurgePerformanceDataResponse")
    public PurgePerformanceDataResponseMsg purgePerformanceData(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        PurgePerformanceDataRequestMsg request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Get Average Performance Statistics For a Service
     *         
     *            
     *             
     * 
     * @param getAlertsRequest
     * @return
     *     returns java.util.List<org.miloss.fgsms.services.interfaces.dataaccessservice.GetAlertsResponseMsg>
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetAlerts", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetAlerts")
    @WebResult(name = "GetAlertsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetAlerts", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAlerts")
    @ResponseWrapper(localName = "GetAlertsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAlertsResponse")
    public List<GetAlertsResponseMsg> getAlerts(
        @WebParam(name = "GetAlertsRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetAlertsRequestMsg getAlertsRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns the fgsms audit log for 
     *         
     *            
     *             
     * 
     * @param getAuditLog
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetAuditLogResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetAuditLog", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetAuditLog")
    @WebResult(name = "GetAuditLogResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetAuditLog", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAuditLog")
    @ResponseWrapper(localName = "GetAuditLogResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAuditLogResponse")
    public GetAuditLogResponseMsg getAuditLog(
        @WebParam(name = "GetAuditLog", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetAuditLogRequestMsg getAuditLog)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns the current list of monitored brokers and some general statistics on each broker, such as current total message counts as reported by the broker, average queue depth amonst all queues, etc. 
     *         
     *            
     *             
     * 
     * @param getBrokerListRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetBrokerListResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetBrokerList", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetBrokerList")
    @WebResult(name = "GetBrokerListResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetBrokerList", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetBrokerList")
    @ResponseWrapper(localName = "GetBrokerListResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetBrokerListResponse")
    public GetBrokerListResponseMsg getBrokerList(
        @WebParam(name = "GetBrokerListRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetBrokerListRequestMsg getBrokerListRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns the last known data set for a broker 
     *         
     *            
     *             
     * 
     * @param getCurrentBrokerDetailsRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetCurrentBrokerDetailsResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetCurrentBrokerDetails", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetCurrentBrokerDetails")
    @WebResult(name = "GetCurrentBrokerDetailsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetCurrentBrokerDetails", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetCurrentBrokerDetails")
    @ResponseWrapper(localName = "GetCurrentBrokerDetailsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetCurrentBrokerDetailsResponse")
    public GetCurrentBrokerDetailsResponseMsg getCurrentBrokerDetails(
        @WebParam(name = "GetCurrentBrokerDetailsRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetCurrentBrokerDetailsRequestMsg getCurrentBrokerDetailsRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns the historical data for a specific broker, such as average queue depth across all topics and queues, over the given period of time 
     *         
     *            
     *             
     * 
     * @param getHistoricalBrokerDetailsRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetHistoricalBrokerDetailsResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetHistoricalBrokerDetails", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetHistoricalBrokerDetails")
    @WebResult(name = "GetHistoricalBrokerDetailsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetHistoricalBrokerDetails", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetHistoricalBrokerDetails")
    @ResponseWrapper(localName = "GetHistoricalBrokerDetailsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetHistoricalBrokerDetailsResponse")
    public GetHistoricalBrokerDetailsResponseMsg getHistoricalBrokerDetails(
        @WebParam(name = "GetHistoricalBrokerDetailsRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetHistoricalBrokerDetailsRequestMsg getHistoricalBrokerDetailsRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns the historical data for a specific topic or queue on a specific broker 
     *         
     *            
     *             
     * 
     * @param getHistoricalTopicQueueDetailsRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetHistoricalTopicQueueDetailsResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetHistoricalTopicQueueDetails", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetHistoricalTopicQueueDetails")
    @WebResult(name = "GetHistoricalTopicQueueDetailsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetHistoricalTopicQueueDetails", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetHistoricalTopicQueueDetails")
    @ResponseWrapper(localName = "GetHistoricalTopicQueueDetailsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetHistoricalTopicQueueDetailsResponse")
    public GetHistoricalTopicQueueDetailsResponseMsg getHistoricalTopicQueueDetails(
        @WebParam(name = "GetHistoricalTopicQueueDetailsRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetHistoricalTopicQueueDetailsRequestMsg getHistoricalTopicQueueDetailsRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns a listing of related transaction IDs, given a thread transaction id 
     *         
     *            
     *             
     * 
     * @param getThreadTransactionsRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetThreadTransactionsResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetThreadTransactions", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetThreadTransactions")
    @WebResult(name = "GetThreadTransactionsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetThreadTransactions", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetThreadTransactions")
    @ResponseWrapper(localName = "GetThreadTransactionsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetThreadTransactionsResponse")
    public GetThreadTransactionsResponseMsg getThreadTransactions(
        @WebParam(name = "GetThreadTransactionsRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetThreadTransactionsRequestMsg getThreadTransactionsRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             Returns a listing of fgsms agents that have recorded data 
     *         
     *            
     *             
     * 
     * @param getAgentTypesRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetAgentTypesResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetAgentTypes", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetAgentTypes")
    @WebResult(name = "GetAgentTypesResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetAgentTypes", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAgentTypes")
    @ResponseWrapper(localName = "GetAgentTypesResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAgentTypesResponse")
    public GetAgentTypesResponseMsg getAgentTypes(
        @WebParam(name = "GetAgentTypesRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetAgentTypesRequestMsg getAgentTypesRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             quickly returns statistics for a given service 
     *         
     *            
     *             
     * 
     * @param getQuickStatsRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetQuickStatsResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetQuickStats", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetQuickStats")
    @WebResult(name = "GetQuickStatsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetQuickStats", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetQuickStats")
    @ResponseWrapper(localName = "GetQuickStatsResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetQuickStatsResponse")
    public GetQuickStatsResponseMsg getQuickStats(
        @WebParam(name = "GetQuickStatsRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetQuickStatsRequestMsg getQuickStatsRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             quickly returns statistics for all accessible services 
     *         
     *            
     *             
     * 
     * @param getQuickStatsAllRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetQuickStatsAllResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetQuickStatsAll", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetQuickStatsAll")
    @WebResult(name = "GetQuickStatsAllResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetQuickStatsAll", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetQuickStatsAll")
    @ResponseWrapper(localName = "GetQuickStatsAllResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetQuickStatsAllResponse")
    public GetQuickStatsAllResponseMsg getQuickStatsAll(
        @WebParam(name = "GetQuickStatsAllRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetQuickStatsAllRequestMsg getQuickStatsAllRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             obtain audit logs by time range, requires global admin role 
     *             
     * 
     * @param getAuditLogsByTimeRangeRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetAuditLogsByTimeRangeResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetAuditLogsByTimeRange", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetAuditLogsByTimeRange")
    @WebResult(name = "GetAuditLogsByTimeRangeResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetAuditLogsByTimeRange", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAuditLogsByTimeRange")
    @ResponseWrapper(localName = "GetAuditLogsByTimeRangeResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAuditLogsByTimeRangeResponse")
    public GetAuditLogsByTimeRangeResponseMsg getAuditLogsByTimeRange(
        @WebParam(name = "GetAuditLogsByTimeRangeRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetAuditLogsByTimeRangeRequestMsg getAuditLogsByTimeRangeRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *           get all machines in a given domain plus drive info
     *             
     * 
     * @param getMostRecentMachineDataByDomainRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetMostRecentMachineDataByDomainResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetMostRecentMachineDataByDomain", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetMostRecentMachineDataByDomain")
    @WebResult(name = "GetMostRecentMachineDataByDomainResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetMostRecentMachineDataByDomain", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMostRecentMachineDataByDomain")
    @ResponseWrapper(localName = "GetMostRecentMachineDataByDomainResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMostRecentMachineDataByDomainResponse")
    public GetMostRecentMachineDataByDomainResponseMsg getMostRecentMachineDataByDomain(
        @WebParam(name = "GetMostRecentMachineDataByDomainRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetMostRecentMachineDataByDomainRequestMsg getMostRecentMachineDataByDomainRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *            machine's perf data plus drive usage
     *             
     * 
     * @param getMostRecentMachineDataRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetMostRecentMachineDataResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetMostRecentMachineData", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetMostRecentMachineData")
    @WebResult(name = "GetMostRecentMachineDataResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetMostRecentMachineData", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMostRecentMachineData")
    @ResponseWrapper(localName = "GetMostRecentMachineDataResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMostRecentMachineDataResponse")
    public GetMostRecentMachineDataResponseMsg getMostRecentMachineData(
        @WebParam(name = "GetMostRecentMachineDataRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetMostRecentMachineDataRequestMsg getMostRecentMachineDataRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *            process's perf data 
     *             
     * 
     * @param getMostRecentProcessDataRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetMostRecentProcessDataResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetMostRecentProcessData", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetMostRecentProcessData")
    @WebResult(name = "GetMostRecentProcessDataResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetMostRecentProcessData", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMostRecentProcessData")
    @ResponseWrapper(localName = "GetMostRecentProcessDataResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMostRecentProcessDataResponse")
    public GetMostRecentProcessDataResponseMsg getMostRecentProcessData(
        @WebParam(name = "GetMostRecentProcessDataRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetMostRecentProcessDataRequestMsg getMostRecentProcessDataRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *             returns performance and drive information logs of a specific machine records by uri and time range
     *             
     * 
     * @param getMachinePerformanceLogsByRangeRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetMachinePerformanceLogsByRangeResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetMachinePerformanceLogsByRange", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetMachinePerformanceLogsByRange")
    @WebResult(name = "GetMachinePerformanceLogsByRangeResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetMachinePerformanceLogsByRange", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMachinePerformanceLogsByRange")
    @ResponseWrapper(localName = "GetMachinePerformanceLogsByRangeResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetMachinePerformanceLogsByRangeResponse")
    public GetMachinePerformanceLogsByRangeResponseMsg getMachinePerformanceLogsByRange(
        @WebParam(name = "GetMachinePerformanceLogsByRangeRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetMachinePerformanceLogsByRangeRequestMsg getMachinePerformanceLogsByRangeRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     *              returns the most recent information for all machine and processes that the requestor has access to
     *             
     * 
     * @param getAllMostRecentMachineAndProcessDataRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetAllMostRecentMachineAndProcessDataResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetAllMostRecentMachineAndProcessData", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetAllMostRecentMachineAndProcessData")
    @WebResult(name = "GetAllMostRecentMachineAndProcessDataResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetAllMostRecentMachineAndProcessData", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAllMostRecentMachineAndProcessData")
    @ResponseWrapper(localName = "GetAllMostRecentMachineAndProcessDataResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAllMostRecentMachineAndProcessDataResponse")
    public GetAllMostRecentMachineAndProcessDataResponseMsg getAllMostRecentMachineAndProcessData(
        @WebParam(name = "GetAllMostRecentMachineAndProcessDataRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetAllMostRecentMachineAndProcessDataRequestMsg getAllMostRecentMachineAndProcessDataRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     * returns performance logs of a specific process records by uri and time range
     *             
     * 
     * @param getProcessPerformanceLogsByRangeRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetProcessPerformanceLogsByRangeResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetProcessPerformanceLogsByRange", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetProcessPerformanceLogsByRange")
    @WebResult(name = "GetProcessPerformanceLogsByRangeResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetProcessPerformanceLogsByRange", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetProcessPerformanceLogsByRange")
    @ResponseWrapper(localName = "GetProcessPerformanceLogsByRangeResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetProcessPerformanceLogsByRangeResponse")
    public GetProcessPerformanceLogsByRangeResponseMsg getProcessPerformanceLogsByRange(
        @WebParam(name = "GetProcessPerformanceLogsByRangeRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetProcessPerformanceLogsByRangeRequestMsg getProcessPerformanceLogsByRangeRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     * removes a record of a specific service dependency
     *             
     * 
     * @param deleteServiceDependencyRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.DeleteServiceDependencyResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "DeleteServiceDependency", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/DeleteServiceDependency")
    @WebResult(name = "DeleteServiceDependencyResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "DeleteServiceDependency", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.DeleteServiceDependency")
    @ResponseWrapper(localName = "DeleteServiceDependencyResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.DeleteServiceDependencyResponse")
    public DeleteServiceDependencyResponseMsg deleteServiceDependency(
        @WebParam(name = "DeleteServiceDependencyRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        DeleteServiceDependencyRequestMsg deleteServiceDependencyRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     * returns the service policy urls that all the service depends on
     *             
     * 
     * @param getAllServiceDependenciesRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetAllServiceDependenciesResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetAllServiceDependencies", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetAllServiceDependencies")
    @WebResult(name = "GetAllServiceDependenciesResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetAllServiceDependencies", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAllServiceDependencies")
    @ResponseWrapper(localName = "GetAllServiceDependenciesResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetAllServiceDependenciesResponse")
    public GetAllServiceDependenciesResponseMsg getAllServiceDependencies(
        @WebParam(name = "GetAllServiceDependenciesRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetAllServiceDependenciesRequestMsg getAllServiceDependenciesRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     * returns the service policy urls that the given service depends on
     *             
     * 
     * @param getServiceDependenciesRequest
     * @return
     *     returns org.miloss.fgsms.services.interfaces.dataaccessservice.GetServiceDependenciesResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetServiceDependencies", action = "urn:org:miloss:fgsms:services:interfaces:dataAccessService/dataAccessService/GetServiceDependencies")
    @WebResult(name = "GetServiceDependenciesResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
    @RequestWrapper(localName = "GetServiceDependencies", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetServiceDependencies")
    @ResponseWrapper(localName = "GetServiceDependenciesResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService", className = "org.miloss.fgsms.services.interfaces.dataaccessservice.GetServiceDependenciesResponse")
    public GetServiceDependenciesResponseMsg getServiceDependencies(
        @WebParam(name = "GetServiceDependenciesRequest", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataAccessService")
        GetServiceDependenciesRequestMsg getServiceDependenciesRequest)
        throws AccessDeniedException, ServiceUnavailableException
    ;

}
