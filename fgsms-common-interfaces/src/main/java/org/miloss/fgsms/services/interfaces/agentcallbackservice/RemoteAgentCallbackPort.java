/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * If it is not possible or desirable to put the notice in a particular
 * file, then You may include the notice in a location (such as a LICENSE
 * file in a relevant directory) where a recipient would be likely to look
 * for such a notice.

 * 
 */
 
/*  ---------------------------------------------------------------------------
 *  U.S. Government, Department of the Army
 *  Army Materiel Command
 *  Research Development Engineering Command
 *  Communications Electronics Research Development and Engineering Center
 *  ---------------------------------------------------------------------------
 */

package org.miloss.fgsms.services.interfaces.agentcallbackservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.miloss.fgsms.services.interfaces.common.GetOperatingStatusRequestMessage;
import org.miloss.fgsms.services.interfaces.common.GetOperatingStatusResponseMessage;


/**
 * Remote Agent Callback Port Type
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-04/11/2011 03:11 PM(mockbuild)-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "remoteAgentCallbackPort", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:agentCallbackService")
@XmlSeeAlso({
    org.miloss.fgsms.services.interfaces.faults.ObjectFactory.class,
    org.miloss.fgsms.services.interfaces.common.ObjectFactory.class,
    us.gov.ic.ism.v2.ObjectFactory.class,
    org.miloss.fgsms.services.interfaces.agentcallbackservice.ObjectFactory.class
})
public interface RemoteAgentCallbackPort {


    /**
     * Executes a set of tasks via command line
     * 				
     * 
     * @param id
     * @param waitforexit
     * @param authorizationcode
     * @param command
     * @param workingDir
     * @return
     *     returns boolean
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "ExecuteTasks", action = "urn:org:miloss:fgsms:services:interfaces:remoteAgentCallbackService/ExecuteTasks")
    @WebResult(name = "Accepted", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:agentCallbackService")
    @RequestWrapper(localName = "ExecuteTasks", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:agentCallbackService", className = "org.miloss.fgsms.services.interfaces.agentcallbackservice.ExecuteTasks")
    @ResponseWrapper(localName = "ExecuteTasksResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:agentCallbackService", className = "org.miloss.fgsms.services.interfaces.agentcallbackservice.ExecuteTasksResponse")
    public boolean executeTasks(
        @WebParam(name = "authorizationcode", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:agentCallbackService")
        String authorizationcode,
        @WebParam(name = "id", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:agentCallbackService")
        String id,
        @WebParam(name = "working_dir", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:agentCallbackService")
        String workingDir,
        @WebParam(name = "command", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:agentCallbackService")
        String command,
        @WebParam(name = "waitforexit", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:agentCallbackService")
        boolean waitforexit)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * 
     * 			Gets the operating status of an remove agent
     * 				
     * 
     * @param request
     * @return
     *     returns org.miloss.fgsms.services.interfaces.common.GetOperatingStatusResponseMessage
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "GetOperatingStatus", action = "urn:org:miloss:fgsms:services:interfaces:remoteAgentCallbackService/GetOperatingStatus")
    @WebResult(name = "response", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:common")
    @RequestWrapper(localName = "GetOperatingStatus", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:common", className = "org.miloss.fgsms.services.interfaces.common.GetOperatingStatus")
    @ResponseWrapper(localName = "GetOperatingStatusResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:common", className = "org.miloss.fgsms.services.interfaces.common.GetOperatingStatusResponse")
    public GetOperatingStatusResponseMessage getOperatingStatus(
        @WebParam(name = "request", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:common")
        GetOperatingStatusRequestMessage request)
        throws AccessDeniedException, ServiceUnavailableException
    ;

}
