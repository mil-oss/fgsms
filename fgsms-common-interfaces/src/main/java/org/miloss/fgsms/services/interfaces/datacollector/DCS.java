
package org.miloss.fgsms.services.interfaces.datacollector;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * DCS Port Type
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.0
 * 
 */
@WebService(name = "DCS", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector")
public interface DCS {


    /**
     * AddData, adds a single transaction record to the database
     * 
     * @param req
     * @return
     *     returns org.miloss.fgsms.services.interfaces.datacollector.AddDataResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "AddData", action = "urn:org:miloss:fgsms:services:interfaces:dataCollector/dataCollectorService/AddData")
    @WebResult(name = "AddDataResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector")
    @RequestWrapper(localName = "AddData", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector", className = "org.miloss.fgsms.services.interfaces.datacollector.AddData")
    @ResponseWrapper(localName = "AddDataResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector", className = "org.miloss.fgsms.services.interfaces.datacollector.AddDataResponse")
    public AddDataResponseMsg addData(
        @WebParam(name = "req", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector")
        AddDataRequestMsg req)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * AddData, adds a set of statistics records from a broker to the database
     * 
     * @param addStatisticalDataRequestMsg
     * @return
     *     returns org.miloss.fgsms.services.interfaces.datacollector.AddStatisticalDataResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "AddStatisticalData", action = "urn:org:miloss:fgsms:services:interfaces:dataCollector/dataCollectorService/AddStatisticalData")
    @WebResult(name = "AddStatisticalDataResponseMsg", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector")
    @RequestWrapper(localName = "AddStatisticalData", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector", className = "org.miloss.fgsms.services.interfaces.datacollector.AddStatisticalData")
    @ResponseWrapper(localName = "AddStatisticalDataResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector", className = "org.miloss.fgsms.services.interfaces.datacollector.AddStatisticalDataResponse")
    public AddStatisticalDataResponseMsg addStatisticalData(
        @WebParam(name = "AddStatisticalDataRequestMsg", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector")
        AddStatisticalDataRequestMsg addStatisticalDataRequestMsg)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * AddData, adds multiple transaction record to the database
     * 
     * @param req
     * @return
     *     returns org.miloss.fgsms.services.interfaces.datacollector.AddDataResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "AddMoreData", action = "urn:org:miloss:fgsms:services:interfaces:dataCollector/dataCollectorService/AddMoreData")
    @WebResult(name = "AddDataResult", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector")
    @RequestWrapper(localName = "AddMoreData", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector", className = "org.miloss.fgsms.services.interfaces.datacollector.AddMoreData")
    @ResponseWrapper(localName = "AddMoreDataResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector", className = "org.miloss.fgsms.services.interfaces.datacollector.AddMoreDataResponse")
    public AddDataResponseMsg addMoreData(
        @WebParam(name = "req", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector")
        List<AddDataRequestMsg> req)
        throws AccessDeniedException, ServiceUnavailableException
    ;

    /**
     * AddMachineAndProcessData, adds a set of performance records from a set of monitored processes from a given machine
     * 
     * @param addMachineAndProcessDataRequestMsg
     * @return
     *     returns org.miloss.fgsms.services.interfaces.datacollector.AddMachineAndProcessDataResponseMsg
     * @throws ServiceUnavailableException
     * @throws AccessDeniedException
     */
    @WebMethod(operationName = "AddMachineAndProcessData", action = "urn:org:miloss:fgsms:services:interfaces:dataCollector/dataCollectorService/AddMachineAndProcessData")
    @WebResult(name = "AddMachineAndProcessDataResponseMsg", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector")
    @RequestWrapper(localName = "AddMachineAndProcessData", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector", className = "org.miloss.fgsms.services.interfaces.datacollector.AddMachineAndProcessData")
    @ResponseWrapper(localName = "AddMachineAndProcessDataResponse", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector", className = "org.miloss.fgsms.services.interfaces.datacollector.AddMachineAndProcessDataResponse")
    public AddMachineAndProcessDataResponseMsg addMachineAndProcessData(
        @WebParam(name = "AddMachineAndProcessDataRequestMsg", targetNamespace = "urn:org:miloss:fgsms:services:interfaces:dataCollector")
        AddMachineAndProcessDataRequestMsg addMachineAndProcessDataRequestMsg)
        throws AccessDeniedException, ServiceUnavailableException
    ;

}
