/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * If it is not possible or desirable to put the notice in a particular
 * file, then You may include the notice in a location (such as a LICENSE
 * file in a relevant directory) where a recipient would be likely to look
 * for such a notice.

 * 
 */
 
/*  ---------------------------------------------------------------------------
 *  US Government, Department of the Army
 *  Army Materiel Command
 *  Research Development Engineering Command
 *  Communications Electronics Research Development and Engineering Center
 *  ---------------------------------------------------------------------------
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace FGSMS.NETTestSuite.HelloWorldESMWCFviaASPNET {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WorkingGetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallDependantServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallWCFDependantServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FailingGetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LongRunningGetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback RandomWorkingMethodOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::FGSMS.NETTestSuite.Properties.Settings.Default.FGSMS_NETTestSuite_HelloWorldESMWCFviaASPNET_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WorkingGetDataCompletedEventHandler WorkingGetDataCompleted;
        
        /// <remarks/>
        public event CallDependantServiceCompletedEventHandler CallDependantServiceCompleted;
        
        /// <remarks/>
        public event CallWCFDependantServiceCompletedEventHandler CallWCFDependantServiceCompleted;
        
        /// <remarks/>
        public event FailingGetDataCompletedEventHandler FailingGetDataCompleted;
        
        /// <remarks/>
        public event LongRunningGetDataCompletedEventHandler LongRunningGetDataCompleted;
        
        /// <remarks/>
        public event RandomWorkingMethodCompletedEventHandler RandomWorkingMethodCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/WorkingGetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WorkingGetData(int value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool valueSpecified) {
            object[] results = this.Invoke("WorkingGetData", new object[] {
                        value,
                        valueSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WorkingGetDataAsync(int value, bool valueSpecified) {
            this.WorkingGetDataAsync(value, valueSpecified, null);
        }
        
        /// <remarks/>
        public void WorkingGetDataAsync(int value, bool valueSpecified, object userState) {
            if ((this.WorkingGetDataOperationCompleted == null)) {
                this.WorkingGetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkingGetDataOperationCompleted);
            }
            this.InvokeAsync("WorkingGetData", new object[] {
                        value,
                        valueSpecified}, this.WorkingGetDataOperationCompleted, userState);
        }
        
        private void OnWorkingGetDataOperationCompleted(object arg) {
            if ((this.WorkingGetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkingGetDataCompleted(this, new WorkingGetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/CallDependantService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CallDependantService(int value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool valueSpecified) {
            object[] results = this.Invoke("CallDependantService", new object[] {
                        value,
                        valueSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallDependantServiceAsync(int value, bool valueSpecified) {
            this.CallDependantServiceAsync(value, valueSpecified, null);
        }
        
        /// <remarks/>
        public void CallDependantServiceAsync(int value, bool valueSpecified, object userState) {
            if ((this.CallDependantServiceOperationCompleted == null)) {
                this.CallDependantServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallDependantServiceOperationCompleted);
            }
            this.InvokeAsync("CallDependantService", new object[] {
                        value,
                        valueSpecified}, this.CallDependantServiceOperationCompleted, userState);
        }
        
        private void OnCallDependantServiceOperationCompleted(object arg) {
            if ((this.CallDependantServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallDependantServiceCompleted(this, new CallDependantServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/CallWCFDependantService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CallWCFDependantService(int value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool valueSpecified) {
            object[] results = this.Invoke("CallWCFDependantService", new object[] {
                        value,
                        valueSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallWCFDependantServiceAsync(int value, bool valueSpecified) {
            this.CallWCFDependantServiceAsync(value, valueSpecified, null);
        }
        
        /// <remarks/>
        public void CallWCFDependantServiceAsync(int value, bool valueSpecified, object userState) {
            if ((this.CallWCFDependantServiceOperationCompleted == null)) {
                this.CallWCFDependantServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallWCFDependantServiceOperationCompleted);
            }
            this.InvokeAsync("CallWCFDependantService", new object[] {
                        value,
                        valueSpecified}, this.CallWCFDependantServiceOperationCompleted, userState);
        }
        
        private void OnCallWCFDependantServiceOperationCompleted(object arg) {
            if ((this.CallWCFDependantServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallWCFDependantServiceCompleted(this, new CallWCFDependantServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/FailingGetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FailingGetData(int value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool valueSpecified) {
            object[] results = this.Invoke("FailingGetData", new object[] {
                        value,
                        valueSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FailingGetDataAsync(int value, bool valueSpecified) {
            this.FailingGetDataAsync(value, valueSpecified, null);
        }
        
        /// <remarks/>
        public void FailingGetDataAsync(int value, bool valueSpecified, object userState) {
            if ((this.FailingGetDataOperationCompleted == null)) {
                this.FailingGetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFailingGetDataOperationCompleted);
            }
            this.InvokeAsync("FailingGetData", new object[] {
                        value,
                        valueSpecified}, this.FailingGetDataOperationCompleted, userState);
        }
        
        private void OnFailingGetDataOperationCompleted(object arg) {
            if ((this.FailingGetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FailingGetDataCompleted(this, new FailingGetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/LongRunningGetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LongRunningGetData(int value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool valueSpecified) {
            object[] results = this.Invoke("LongRunningGetData", new object[] {
                        value,
                        valueSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LongRunningGetDataAsync(int value, bool valueSpecified) {
            this.LongRunningGetDataAsync(value, valueSpecified, null);
        }
        
        /// <remarks/>
        public void LongRunningGetDataAsync(int value, bool valueSpecified, object userState) {
            if ((this.LongRunningGetDataOperationCompleted == null)) {
                this.LongRunningGetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLongRunningGetDataOperationCompleted);
            }
            this.InvokeAsync("LongRunningGetData", new object[] {
                        value,
                        valueSpecified}, this.LongRunningGetDataOperationCompleted, userState);
        }
        
        private void OnLongRunningGetDataOperationCompleted(object arg) {
            if ((this.LongRunningGetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LongRunningGetDataCompleted(this, new LongRunningGetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/RandomWorkingMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RandomWorkingMethod(int value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool valueSpecified) {
            object[] results = this.Invoke("RandomWorkingMethod", new object[] {
                        value,
                        valueSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RandomWorkingMethodAsync(int value, bool valueSpecified) {
            this.RandomWorkingMethodAsync(value, valueSpecified, null);
        }
        
        /// <remarks/>
        public void RandomWorkingMethodAsync(int value, bool valueSpecified, object userState) {
            if ((this.RandomWorkingMethodOperationCompleted == null)) {
                this.RandomWorkingMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRandomWorkingMethodOperationCompleted);
            }
            this.InvokeAsync("RandomWorkingMethod", new object[] {
                        value,
                        valueSpecified}, this.RandomWorkingMethodOperationCompleted, userState);
        }
        
        private void OnRandomWorkingMethodOperationCompleted(object arg) {
            if ((this.RandomWorkingMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RandomWorkingMethodCompleted(this, new RandomWorkingMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkingGetDataCompletedEventHandler(object sender, WorkingGetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkingGetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkingGetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CallDependantServiceCompletedEventHandler(object sender, CallDependantServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallDependantServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallDependantServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CallWCFDependantServiceCompletedEventHandler(object sender, CallWCFDependantServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallWCFDependantServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallWCFDependantServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FailingGetDataCompletedEventHandler(object sender, FailingGetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FailingGetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FailingGetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LongRunningGetDataCompletedEventHandler(object sender, LongRunningGetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LongRunningGetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LongRunningGetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RandomWorkingMethodCompletedEventHandler(object sender, RandomWorkingMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RandomWorkingMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RandomWorkingMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591