<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <system.serviceModel>
        <bindings>
            <customBinding>
                <binding name="WSHttpBinding_IService1">
                    <security defaultAlgorithmSuite="Default" authenticationMode="SecureConversation"
                        requireDerivedKeys="true" securityHeaderLayout="Strict" includeTimestamp="true"
                        keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncryptAndEncryptSignature"
                        messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10"
                        requireSecurityContextCancellation="true" requireSignatureConfirmation="false">
                        <localClientSettings cacheCookies="true" detectReplays="true"
                            replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite"
                            replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00"
                            sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true"
                            timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60" />
                        <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00"
                            maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00"
                            negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00"
                            sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00"
                            reconnectTransportOnFailure="true" maxPendingSessions="128"
                            maxCachedCookies="1000" timestampValidityDuration="00:05:00" />
                        <secureConversationBootstrap defaultAlgorithmSuite="Default"
                            authenticationMode="SspiNegotiated" requireDerivedKeys="true"
                            securityHeaderLayout="Strict" includeTimestamp="true" keyEntropyMode="CombinedEntropy"
                            messageProtectionOrder="SignBeforeEncryptAndEncryptSignature"
                            messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10"
                            requireSecurityContextCancellation="true" requireSignatureConfirmation="false">
                            <localClientSettings cacheCookies="true" detectReplays="true"
                                replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite"
                                replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00"
                                sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true"
                                timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60" />
                            <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00"
                                maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00"
                                negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00"
                                sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00"
                                reconnectTransportOnFailure="true" maxPendingSessions="128"
                                maxCachedCookies="1000" timestampValidityDuration="00:05:00" />
                        </secureConversationBootstrap>
                    </security>
                    <textMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16"
                        messageVersion="Default" writeEncoding="utf-8">
                        <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                            maxBytesPerRead="4096" maxNameTableCharCount="16384" />
                    </textMessageEncoding>
                    <httpTransport manualAddressing="false" maxBufferPoolSize="524288"
                        maxReceivedMessageSize="65536" allowCookies="false" authenticationScheme="Anonymous"
                        bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
                        keepAliveEnabled="true" maxBufferSize="65536" proxyAuthenticationScheme="Anonymous"
                        realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false"
                        useDefaultWebProxy="true">
                        <extendedProtectionPolicy policyEnforcement="Never" />
                    </httpTransport>
                </binding>
                <binding name="WSHttpBinding_IService11">
                    <security defaultAlgorithmSuite="Default" authenticationMode="SecureConversation"
                        requireDerivedKeys="true" securityHeaderLayout="Strict" includeTimestamp="true"
                        keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncryptAndEncryptSignature"
                        messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10"
                        requireSecurityContextCancellation="true" requireSignatureConfirmation="false">
                        <localClientSettings cacheCookies="true" detectReplays="true"
                            replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite"
                            replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00"
                            sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true"
                            timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60" />
                        <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00"
                            maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00"
                            negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00"
                            sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00"
                            reconnectTransportOnFailure="true" maxPendingSessions="128"
                            maxCachedCookies="1000" timestampValidityDuration="00:05:00" />
                        <secureConversationBootstrap defaultAlgorithmSuite="Default"
                            authenticationMode="SspiNegotiated" requireDerivedKeys="true"
                            securityHeaderLayout="Strict" includeTimestamp="true" keyEntropyMode="CombinedEntropy"
                            messageProtectionOrder="SignBeforeEncryptAndEncryptSignature"
                            messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10"
                            requireSecurityContextCancellation="true" requireSignatureConfirmation="false">
                            <localClientSettings cacheCookies="true" detectReplays="true"
                                replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite"
                                replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00"
                                sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true"
                                timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60" />
                            <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00"
                                maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00"
                                negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00"
                                sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00"
                                reconnectTransportOnFailure="true" maxPendingSessions="128"
                                maxCachedCookies="1000" timestampValidityDuration="00:05:00" />
                        </secureConversationBootstrap>
                    </security>
                    <textMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16"
                        messageVersion="Default" writeEncoding="utf-8">
                        <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                            maxBytesPerRead="4096" maxNameTableCharCount="16384" />
                    </textMessageEncoding>
                    <httpTransport manualAddressing="false" maxBufferPoolSize="524288"
                        maxReceivedMessageSize="65536" allowCookies="false" authenticationScheme="Anonymous"
                        bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
                        keepAliveEnabled="true" maxBufferSize="65536" proxyAuthenticationScheme="Anonymous"
                        realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false"
                        useDefaultWebProxy="true">
                        <extendedProtectionPolicy policyEnforcement="Never" />
                    </httpTransport>
                </binding>
            </customBinding>
        </bindings>
        <client>

            <endpoint address="http://localhost:64499/HelloWorldESMWCFSigned.svc" binding="customBinding"
                bindingConfiguration="WSHttpBinding_IService11" contract="helloworld.IService1"
                name="WSHttpBinding_IService11"
                       behaviorConfiguration="Signed"
                      >
                <identity>
                    <dns value="localhost" />
                </identity>
            </endpoint>
        </client>
      <behaviors>
        <endpointBehaviors>
          <behavior name="Signed">
            <!--<clientVia viaUri="http://localhost:64500/HelloWorldESMWCFSigned.svc"/>-->
            <clientCredentials>
              <serviceCertificate>
                <defaultCertificate x509FindType="FindBySubjectName" storeName="My" storeLocation="LocalMachine" findValue="WCFQuickStartServer"/>
              </serviceCertificate>
              <clientCertificate x509FindType="FindBySubjectName" storeName="My" storeLocation="LocalMachine" findValue="WCFQuickStartClient"/>
            </clientCredentials>

          </behavior>
        </endpointBehaviors>
      </behaviors>
    </system.serviceModel>
  <appSettings>
    <add key="org.miloss.fgsms.DCS.URL" value="http://localhost:8888/fgsmsServices/services/DCS"/>
    <add key="org.miloss.fgsms.PCS.URL" value="http://localhost:8888/fgsmsServices/services/PCS"/>
    <add key="org.miloss.fgsms.SS.URL" value="http://localhost:8888/fgsmsServices/services/SS"/>

    <!-- can be INFO, DEBUG, WARN, ERROR-->
    <add key="org.miloss.fgsms.loglevel" value="WARN"/>

    <add key="org.miloss.fgsms.IgnoreList" value="‎"/>
    <!-- can be ONLINE or OFFLINE
    OFFLINE = all transactions are stored to disk encrypted. These can be sent back later using the persistent storage agent
    ONLINE = normal operation
    -->
    <add key="org.miloss.fgsms.agent.operatingmode" value="ONLINE"/>
    <add key="org.miloss.fgsms.message.processor.dead.message.queue.duration" value="60000"/>
    <!-- can be None usernamePassword, or PKI -->
    <add key="org.miloss.fgsms.agent.AuthMode" value="usernamePassword"/>

    <!-- search machine store, personal/my for serial number, must have private key, key must be accessible by the current context-->
    <add key="org.miloss.fgsms.agent.AuthModePKIInfo" value="0414"/>
    <add key="org.miloss.fgsms.agent.AuthModeUsername" value="fgsmsagent"/>
    <add key="org.miloss.fgsms.agent.AuthModePassword" value="cvnWxwXoE6/ECVzrADPwFw=="/>
    <add key="org.miloss.fgsms.agent.dependencyinjection.enabled" value="true"/>
    <!-- can be HOLD = Hold the data in memory,
                PURGE = throw it away
                HOLDPERSIST = encrypt and store it to disk
                -->
    <add key="org.miloss.fgsms.agent.unavailablebehavior" value="HOLDPERSIST"/>
    <!-- everyone should be able to write to this folder since this agent can run under any user prinicple-->
    <add key="org.miloss.fgsms.agent.persistlocation" value="c:\temp\fgsms"/>
    <add key="org.miloss.fgsms.agent.policyconfigurationservice.algorithm" value="FAILOVER"/>
    <add key="org.miloss.fgsms.agent.policyconfigurationservice.retry" value="1"/>
    <add key="org.miloss.fgsms.agent.datacollectorservice.algorithm" value="FAILOVER"/>
    <add key="org.miloss.fgsms.agent.datacollectorservice.retry" value="1"/>

    <add key="org.miloss.fgsms.discovery.interval" value="60000"/>
    <add key="org.miloss.fgsms.discovery.dns.enabled" value="false"/>
    <add key="org.miloss.fgsms.discovery.uddi.enabled" value="false"/>
    <add key="org.miloss.fgsms.discovery.uddi.inquiry.url" value="http://localhost:8080/juddiv3/services/inquiry"/>
    <add key="org.miloss.fgsms.discovery.uddi.inquiry.authrequired" value="false"/>
    <add key="org.miloss.fgsms.discovery.uddi.security.url" value="http://localhost:8080/juddiv3/services/security"/>
    <add key="org.miloss.fgsms.discovery.uddi.security.username" value="root"/>
    <add key="org.miloss.fgsms.discovery.uddi.security.password" value="BxM/31xapyWiYvr1RxR0bA=="/>
    <!-- options
    EndpointBindingKey, loads from a BindingTemplate Key, this must be the unique identifier for the binding template containing 0 or more endpoints
    EndpointKeyWord, attempts to find services by name, aka the display name
    ServiceEntityKey loads from a BusinessService key, this must be the unique identifier for the business service containing 0 or more binding templates with 0 or more endpoints
    -->
    <add key="org.miloss.fgsms.discovery.uddi.lookup.findType" value="EndpointKeyWord"/>
    <add key="org.miloss.fgsms.discovery.uddi.lookup.dcs" value="uddi:juddi.apache.org:6843d553-b512-4a6b-9632-9075392b95a2"/>
    <add key="org.miloss.fgsms.discovery.uddi.lookup.pcs" value="fgsms.PCS"/>
  </appSettings>
</configuration>