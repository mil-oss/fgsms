<?xml version="1.0"?>
<configuration>
	<configSections>
		<sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
			<sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
				<section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
				<sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
					<section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="Everywhere"/>
					<section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
					<section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
					<section name="roleService" type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
				</sectionGroup>
			</sectionGroup>
		</sectionGroup>
		<section name="microsoft.web.services2" type="Microsoft.Web.Services2.Configuration.WebServicesConfiguration, Microsoft.Web.Services2, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
	</configSections>
  <appSettings>
    <add key="org.miloss.fgsms.DCS.URL" value="http://localhost:8888/fgsmsServices/services/DCS"/>
    <add key="org.miloss.fgsms.PCS.URL" value="http://localhost:8888/fgsmsServices/services/PCS"/>
    <add key="org.miloss.fgsms.SS.URL" value="http://localhost:8888/fgsmsServices/services/SS"/>

    <!-- can be INFO, DEBUG, WARN, ERROR-->
    <add key="org.miloss.fgsms.loglevel" value="WARN"/>

    <add key="org.miloss.fgsms.IgnoreList" value="‎"/>
    <!-- can be ONLINE or OFFLINE
    OFFLINE = all transactions are stored to disk encrypted. These can be sent back later using the persistent storage agent
    ONLINE = normal operation
    -->
    <add key="org.miloss.fgsms.agent.operatingmode" value="ONLINE"/>
    <add key="org.miloss.fgsms.message.processor.dead.message.queue.duration" value="60000"/>
    <!-- can be None usernamePassword, or PKI -->
    <add key="org.miloss.fgsms.agent.AuthMode" value="usernamePassword"/>

    <!-- search machine store, personal/my for serial number, must have private key, key must be accessible by the current context-->
    <add key="org.miloss.fgsms.agent.AuthModePKIInfo" value="0414"/>
    <add key="org.miloss.fgsms.agent.AuthModeUsername" value="fgsmsagent"/>
    <add key="org.miloss.fgsms.agent.AuthModePassword" value="cvnWxwXoE6/ECVzrADPwFw=="/>
    <add key="org.miloss.fgsms.agent.dependencyinjection.enabled" value="true"/>
    <!-- can be HOLD = Hold the data in memory,
                PURGE = throw it away
                HOLDPERSIST = encrypt and store it to disk
                -->
    <add key="org.miloss.fgsms.agent.unavailablebehavior" value="HOLDPERSIST"/>
    <!-- everyone should be able to write to this folder since this agent can run under any user prinicple-->
    <add key="org.miloss.fgsms.agent.persistlocation" value="c:\temp\fgsms"/>
    <add key="org.miloss.fgsms.agent.policyconfigurationservice.algorithm" value="FAILOVER"/>
    <add key="org.miloss.fgsms.agent.policyconfigurationservice.retry" value="1"/>
    <add key="org.miloss.fgsms.agent.datacollectorservice.algorithm" value="FAILOVER"/>
    <add key="org.miloss.fgsms.agent.datacollectorservice.retry" value="1"/>

    <add key="org.miloss.fgsms.discovery.interval" value="60000"/>
    <add key="org.miloss.fgsms.discovery.dns.enabled" value="false"/>
    <add key="org.miloss.fgsms.discovery.uddi.enabled" value="false"/>
    <add key="org.miloss.fgsms.discovery.uddi.inquiry.url" value="http://localhost:8080/juddiv3/services/inquiry"/>
    <add key="org.miloss.fgsms.discovery.uddi.inquiry.authrequired" value="false"/>
    <add key="org.miloss.fgsms.discovery.uddi.security.url" value="http://localhost:8080/juddiv3/services/security"/>
    <add key="org.miloss.fgsms.discovery.uddi.security.username" value="root"/>
    <add key="org.miloss.fgsms.discovery.uddi.security.password" value="BxM/31xapyWiYvr1RxR0bA=="/>
    <!-- options
    EndpointBindingKey, loads from a BindingTemplate Key, this must be the unique identifier for the binding template containing 0 or more endpoints
    EndpointKeyWord, attempts to find services by name, aka the display name
    ServiceEntityKey loads from a BusinessService key, this must be the unique identifier for the business service containing 0 or more binding templates with 0 or more endpoints
    -->
    <add key="org.miloss.fgsms.discovery.uddi.lookup.findType" value="EndpointKeyWord"/>
    <add key="org.miloss.fgsms.discovery.uddi.lookup.dcs" value="uddi:juddi.apache.org:6843d553-b512-4a6b-9632-9075392b95a2"/>
    <add key="org.miloss.fgsms.discovery.uddi.lookup.pcs" value="fgsms.PCS"/>
  </appSettings>
	<connectionStrings/>
	<microsoft.web.services2>
		<filters>
			<output>
				<add type="fgsms.Agents.AgentWSE2Output,  fgsms.Agents"/>
			</output>
			<input>
				<add type="fgsms.Agents.AgentWSE2Input,  fgsms.Agents"/>
			</input>
		</filters>
	</microsoft.web.services2>
	<system.web>
		<webServices>
			<soapExtensionTypes>
				<add type="Microsoft.Web.Services2.WebServicesExtension,                     Microsoft.Web.Services2, Version=2.0.0.0,                     Culture=neutral,                     PublicKeyToken=31bf3856ad364e35" priority="1" group="0"/>
			</soapExtensionTypes>
		</webServices>
		<!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
		<compilation debug="false">
			<assemblies>
				<add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Data.DataSetExtensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add assembly="System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
			</assemblies>
		</compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
		<authentication mode="Windows"/>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
		<pages>
			<controls>
				<add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add tagPrefix="asp" namespace="System.Web.UI.WebControls" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			</controls>
		</pages>
		<httpHandlers>
			<remove verb="*" path="*.asmx"/>
			<add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>
		</httpHandlers>
		<httpModules>
			<add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
		</httpModules>
	</system.web>
	<system.codedom>
		<compilers>
			<compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
				<providerOption name="CompilerVersion" value="v3.5"/>
				<providerOption name="WarnAsError" value="false"/>
			</compiler>
		</compilers>
	</system.codedom>
	<!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
	<system.webServer>
		<validation validateIntegratedModeConfiguration="false"/>
		<modules>
			<remove name="ScriptModule"/>
			<add name="ScriptModule" preCondition="managedHandler" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
		</modules>
		<handlers>
			<remove name="WebServiceHandlerFactory-Integrated"/>
			<remove name="ScriptHandlerFactory"/>
			<remove name="ScriptHandlerFactoryAppServices"/>
			<remove name="ScriptResource"/>
			<add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
		</handlers>
	</system.webServer>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1" appliesTo="v2.0.50727"><dependentAssembly>
				<assemblyIdentity name="System.Web.Extensions" publicKeyToken="31bf3856ad364e35"/>
				<bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="3.5.0.0"/>
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Extensions.Design" publicKeyToken="31bf3856ad364e35"/>
				<bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="3.5.0.0"/>
			</dependentAssembly>
		</assemblyBinding></runtime>
	<system.serviceModel>
		<client>
			<endpoint address="http://localhost:49583/DataCollectorService.svc" binding="basicHttpBinding" bindingConfiguration="AgentBinding" contract="dataCollectorService" name="dataCollectorServiceEndpoint">
				<identity>
					<dns value="localhost"/>
				</identity>
			</endpoint>
			<endpoint address="http://localhost:49587/PolicyConfigurationService.svc" binding="basicHttpBinding" contract="policyConfigurationService" name="policyConfigurationService">
				<identity>
					<dns value="localhost"/>
				</identity>
			</endpoint>
		</client>
		<bindings>
			<basicHttpBinding>
				<binding maxBufferPoolSize="2147483647" sendTimeout="00:10:00" receiveTimeout="00:10:00" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" name="AgentBinding" transferMode="Buffered">
					<readerQuotas maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxDepth="2147483647" maxNameTableCharCount="2147483647" maxStringContentLength="2147483647"/>
					<security mode="None"></security>
				</binding>
			</basicHttpBinding>
		</bindings>
	</system.serviceModel>
	<system.diagnostics>
		<sources>
			<source name="System.ServiceModel" switchValue="Warning" propagateActivity="true">
				<listeners>
					<add type="System.Diagnostics.DefaultTraceListener" name="Default"/>
					<add name="xml"/>
				</listeners>
			</source>
			<!-- this is our message source for auditing and logging.
      verbose logs the entire inbound message, unencrypted
      informati on or warning is suitable for most deployments
      -->
			<source name="fgsms.Agents.AgentWSE2" switchValue="Verbose, ActivityTracing">
				<listeners>
					<add type="System.Diagnostics.DefaultTraceListener" name="Default"/>
					<add name="xml"/>
				</listeners>
			</source>
			<source name="fgsms.Agents.Processor" switchValue="Verbose, ActivityTracing">
				<listeners>
					<add type="System.Diagnostics.DefaultTraceListener" name="Default"/>
					<add name="xml"/>
				</listeners>
			</source>
		</sources>
		<sharedListeners>
			<!-- ensure the IIS App Pool identity has write access to this location -->
			<add initializeData="C:\temp\fgsms.Agents.WSE2.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="xml"/>
		</sharedListeners>
		<trace autoflush="true"/>
	</system.diagnostics>
</configuration>
