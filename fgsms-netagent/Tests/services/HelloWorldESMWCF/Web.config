<?xml version="1.0"?>
<!--
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<configSections>
		<sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
			<sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
				<section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
				<sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
					<section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="Everywhere"/>
					<section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
					<section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
					<section name="roleService" type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
				</sectionGroup>
			</sectionGroup>
		</sectionGroup>
		<sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
			<section name="HelloWorldESMTester.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
		</sectionGroup>
	</configSections>

	<connectionStrings/>
	<system.web>
		<!--
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
		<compilation debug="true">
			<assemblies>
				<add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			</assemblies>
		</compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
		<authentication mode="Windows"/>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
		<pages>
			<controls>
				<add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			</controls>
		</pages>
		<httpHandlers>
			<remove verb="*" path="*.asmx"/>
			<add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>
		</httpHandlers>
		<httpModules>
			<add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
		</httpModules>
	</system.web>
	<system.codedom>
		<compilers>
			<compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
				<providerOption name="CompilerVersion" value="v3.5"/>
				<providerOption name="WarnAsError" value="false"/>
			</compiler>
		</compilers>
	</system.codedom>
	<!--
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
	<system.webServer>
		<validation validateIntegratedModeConfiguration="false"/>
		<modules>
			<add name="ScriptModule" preCondition="integratedMode" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
		</modules>
		<handlers>
			<remove name="WebServiceHandlerFactory-Integrated"/>
			<add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
		</handlers>
	</system.webServer>
	
	<system.serviceModel>
		<!--<serviceHostingEnvironment aspNetCompatibilityEnabled="true" />-->
    <extensions>
      <behaviorExtensions>
        <add name="fgsms.Agent" type="org.miloss.fgsms.agent.wcf.AgentWCFServiceBehaviorElement, fgsms.NETAgent, Version=1.0.0.0, Culture=neutral, PublicKeyToken=eb2f31c22dc30917"/>
      </behaviorExtensions>
    </extensions>
		<client>
		
			<endpoint address="http://localhost:49600/Service2.svc" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IService1" contract="ServiceReference1.IService1" name="WSHttpBinding_IService1">
				<identity>
					<dns value="localhost"/>
				</identity>
			</endpoint>
		</client>
    
    
		<bindings>
		 <wsHttpBinding>
				<binding name="WSHttpBinding_IService1" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" bypassProxyOnLocal="false" 
                 transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" 
                 textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
					<readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
					<reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false"/>
					<security mode="Message">
						<transport clientCredentialType="Windows" proxyCredentialType="None" realm="">
							<extendedProtectionPolicy policyEnforcement="Never"/>
						</transport>
						<message clientCredentialType="Windows" negotiateServiceCredential="true" algorithmSuite="Default" establishSecurityContext="true"/>
					</security>
				</binding>
			</wsHttpBinding>
		</bindings>
		<services>
			<service name="HelloWorldESMTester.Service1" behaviorConfiguration="HelloWorldESMTester.Service1Behavior">
				<!-- Service Endpoints -->
				<endpoint address="" binding="basicHttpBinding" contract="HelloWorldESMTester.IService1">
					<identity>
						<dns value="localhost"/>
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
			</service>
		</services>
		<behaviors>
			<serviceBehaviors>
				<behavior name="HelloWorldESMTester.Service1Behavior">
					<fgsms.Agent/>
					<!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
					<serviceMetadata httpGetEnabled="true"/>
					<!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
					<serviceDebug includeExceptionDetailInFaults="true"/>
				</behavior>
			</serviceBehaviors>
		</behaviors>
	</system.serviceModel>
	<applicationSettings>
		<HelloWorldESMTester.Properties.Settings>
			<setting name="HelloWorldESMTester_asmxHelloWorld_Service1" serializeAs="String">
				<value>http://localhost:49603/Service1.asmx</value>
			</setting>
		</HelloWorldESMTester.Properties.Settings>
	</applicationSettings>
  <appSettings>

    <add key="executionurl" value="http://localhost:80/HelloWorldESMTester/HelloWorldESMWCF.svc"/>

    <!-- <add key="executionurl" value="http://localhost:36244/HelloWorldESMWCF.svc"/>-->
    
    
    <!-- agent settings below-->
    
    <add key="org.miloss.fgsms.DCS.URL" value="http://localhost:8888/fgsmsServices/services/DCS"/>
    <add key="org.miloss.fgsms.PCS.URL" value="http://localhost:8888/fgsmsServices/services/PCS"/>
    <add key="org.miloss.fgsms.SS.URL" value="http://localhost:8888/fgsmsServices/services/SS"/>

    <!-- can be INFO, DEBUG, WARN, ERROR-->
    <add key="org.miloss.fgsms.loglevel" value="WARN"/>

    <add key="org.miloss.fgsms.IgnoreList" value="‎"/>
    <!-- can be ONLINE or OFFLINE
    OFFLINE = all transactions are stored to disk encrypted. These can be sent back later using the persistent storage agent
    ONLINE = normal operation
    -->
    <add key="org.miloss.fgsms.agent.operatingmode" value="ONLINE"/>
    <add key="org.miloss.fgsms.message.processor.dead.message.queue.duration" value="60000"/>
    <!-- can be None usernamePassword, or PKI -->
    <add key="org.miloss.fgsms.agent.AuthMode" value="usernamePassword"/>

    <!-- search machine store, personal/my for serial number, must have private key, key must be accessible by the current context-->
    <add key="org.miloss.fgsms.agent.AuthModePKIInfo" value="0414"/>
    <add key="org.miloss.fgsms.agent.AuthModeUsername" value="fgsmsagent"/>
    <add key="org.miloss.fgsms.agent.AuthModePassword" value="cvnWxwXoE6/ECVzrADPwFw=="/>
    <add key="org.miloss.fgsms.agent.dependencyinjection.enabled" value="true"/>
    <!-- can be HOLD = Hold the data in memory,
                PURGE = throw it away
                HOLDPERSIST = encrypt and store it to disk
                -->
    <add key="org.miloss.fgsms.agent.unavailablebehavior" value="HOLDPERSIST"/>
    <!-- everyone should be able to write to this folder since this agent can run under any user prinicple-->
    <add key="org.miloss.fgsms.agent.persistlocation" value="c:\temp\fgsms"/>
    <add key="org.miloss.fgsms.agent.policyconfigurationservice.algorithm" value="FAILOVER"/>
    <add key="org.miloss.fgsms.agent.policyconfigurationservice.retry" value="1"/>
    <add key="org.miloss.fgsms.agent.datacollectorservice.algorithm" value="FAILOVER"/>
    <add key="org.miloss.fgsms.agent.datacollectorservice.retry" value="1"/>

    <add key="org.miloss.fgsms.discovery.interval" value="60000"/>
    <add key="org.miloss.fgsms.discovery.dns.enabled" value="false"/>
    <add key="org.miloss.fgsms.discovery.uddi.enabled" value="false"/>
    <add key="org.miloss.fgsms.discovery.uddi.inquiry.url" value="http://localhost:8080/juddiv3/services/inquiry"/>
    <add key="org.miloss.fgsms.discovery.uddi.inquiry.authrequired" value="false"/>
    <add key="org.miloss.fgsms.discovery.uddi.security.url" value="http://localhost:8080/juddiv3/services/security"/>
    <add key="org.miloss.fgsms.discovery.uddi.security.username" value="root"/>
    <add key="org.miloss.fgsms.discovery.uddi.security.password" value="BxM/31xapyWiYvr1RxR0bA=="/>
    <!-- options
    EndpointBindingKey, loads from a BindingTemplate Key, this must be the unique identifier for the binding template containing 0 or more endpoints
    EndpointKeyWord, attempts to find services by name, aka the display name
    ServiceEntityKey loads from a BusinessService key, this must be the unique identifier for the business service containing 0 or more binding templates with 0 or more endpoints
    -->
    <add key="org.miloss.fgsms.discovery.uddi.lookup.findType" value="EndpointKeyWord"/>
    <add key="org.miloss.fgsms.discovery.uddi.lookup.dcs" value="uddi:juddi.apache.org:6843d553-b512-4a6b-9632-9075392b95a2"/>
    <add key="org.miloss.fgsms.discovery.uddi.lookup.pcs" value="fgsms.PCS"/>

  </appSettings>
</configuration>
