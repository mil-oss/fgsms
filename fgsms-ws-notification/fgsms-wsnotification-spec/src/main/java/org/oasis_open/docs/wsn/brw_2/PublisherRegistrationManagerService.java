
package org.oasis_open.docs.wsn.brw_2;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "PublisherRegistrationManagerService", targetNamespace = "http://docs.oasis-open.org/wsn/brw-2")
public class PublisherRegistrationManagerService
    extends Service
{

    private final static URL PUBLISHERREGISTRATIONMANAGERSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(org.oasis_open.docs.wsn.brw_2.PublisherRegistrationManagerService.class.getName());

   
        static {
           ClassLoader cl = Thread.currentThread().getContextClassLoader();
        if (cl != null) {
            PUBLISHERREGISTRATIONMANAGERSERVICE_WSDL_LOCATION = cl.getResource("brw-2impl.wsdl");
        } else {
            PUBLISHERREGISTRATIONMANAGERSERVICE_WSDL_LOCATION = PublisherRegistrationManagerService.class.getClassLoader().getResource("brw-2impl.wsdl");
        }
    }

    public PublisherRegistrationManagerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PublisherRegistrationManagerService() {
        super(PUBLISHERREGISTRATIONMANAGERSERVICE_WSDL_LOCATION, new QName("http://docs.oasis-open.org/wsn/brw-2", "PublisherRegistrationManagerService"));
    }

    /**
     * 
     * @return
     *     returns PublisherRegistrationManager
     */
    @WebEndpoint(name = "PublisherRegistrationManagerPort")
    public PublisherRegistrationManager getPublisherRegistrationManagerPort() {
        return super.getPort(new QName("http://docs.oasis-open.org/wsn/brw-2", "PublisherRegistrationManagerPort"), PublisherRegistrationManager.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PublisherRegistrationManager
     */
    @WebEndpoint(name = "PublisherRegistrationManagerPort")
    public PublisherRegistrationManager getPublisherRegistrationManagerPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://docs.oasis-open.org/wsn/brw-2", "PublisherRegistrationManagerPort"), PublisherRegistrationManager.class, features);
    }

}
